Description: >
  Haruna Muhammad Rabiu UdacityALX DevOps project 2

Parameters:
  EnvironmentName:
    Description: Environment name that will be prefixed to resource names
    Type: String

  S3BucketName:
    Description: The bucket name to download the app
    Type: String
  InstanceTypeName:
    Description: Instance Type
    Type: String
  InstanceVolumeSize:
    Description: Instance Volume Size
    Type: String

Resources:
  LBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Load Balancer Security Group
      VpcId:
        Fn::ImportValue:
          !Sub ${EnvironmentName}-VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Web Servers Security Group
      VpcId:
        Fn::ImportValue:
          !Sub ${EnvironmentName}-VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  SuperRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole

  S3BucketsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: App-download
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - s3:GetObject
          Resource:
          - !Sub 'arn:aws:s3:::${S3BucketName}/*'
      Roles:
      - !Ref 'SuperRole'

 
  AppInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: '/'
      Roles:
        - Ref: 'SuperRole'

  WebServerLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install awscli -y
          apt-get install apache2 -y
          apt-get install unzip -y
          cd /var/www/html
          aws s3 cp s3://${S3BucketName}/devops-project2.zip .
          unzip -o devops-project2.zip
          systemctl start apache2.service
      ImageId: ami-0d70546e43a941d70
      IamInstanceProfile: !Ref AppInstanceProfile
      SecurityGroups:
      - !Ref WebServerSecurityGroup
      InstanceType: !Ref 'InstanceTypeName'
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: !Ref 'InstanceVolumeSize'

  WebServerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          !Sub ${EnvironmentName}-VPCID

  WebServerGroup: 
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue:
          !Sub ${EnvironmentName}-PRIV-NETS
      LaunchConfigurationName: !Ref WebServerLaunchConfig
      MinSize: '4'
      MaxSize: '6'
      TargetGroupARNs:
      - !Ref WebServerTargetGroup

  WebServerLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue:
          !Sub ${EnvironmentName}-PUB1-SN
      - Fn::ImportValue:
          !Sub ${EnvironmentName}-PUB2-SN
      SecurityGroups:
      - !Ref LBSecurityGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref WebServerTargetGroup
      LoadBalancerArn: !Ref WebServerLB
      Port: '80'
      Protocol: HTTP

  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref 'WebServerTargetGroup'
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref 'Listener'
      Priority: 1

Outputs:
  LoadBalancer:
    Description: DNS for the LB
    Value: 
      !Join [ "", [ "http://", !GetAtt WebServerLB.DNSName ] ]
    Export:
      Name: !Sub "${EnvironmentName}-WEB-LB-DNS"